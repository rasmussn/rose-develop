include $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs

# noinst_PROGRAMS = globalVariablesInLambdas

# globalVariablesInLambdas_SOURCES = globalVariablesInLambdas.C

AM_CPPFLAGS = $(ROSE_INCLUDES)
AM_LDFLAGS = $(ROSE_RPATHS)
LDADD    = $(ROSE_LIBS)

# globalVariablesInLambdas_TESTS = test_1.C

TESTCODES_REQUIRED_TO_PASS = \
   test2012_01.C \
   test2012_02.C \
   test2012_03.C \
   test2012_04.C \
   test2012_05.C \
   test2012_06.C \
   test2012_07.C \
   test2012_09.C \
   test2012_11.C \
   test2012_12.C \
   test2012_13.C \
   test2012_15.C \
   test2012_16.C \
   test2012_17.C \
   test2012_18.C \
   test2012_19.C \
   test2012_20.C \
   test2012_21.C \
   test2012_22.C \
   test2012_25.C \
   test2012_27.C \
   test2012_28.C \
   test2012_29.C \
   test2012_30.C \
   test2012_31.C \
   test2012_32.C \
   test2012_33.C \
   test2012_34.C \
   test2014_02.C \
   test2014_03.C \
   test2014_04.C \
   test2014_05.C \
   test2014_06.C \
   test2014_07.C \
   test2014_08.C \
   test2014_09.C \
   test2014_10.C \
   test2014_11.C \
   test2014_12.C \
   test2014_13.C \
   test2014_14.C \
   test2014_15.C \
   test2014_16.C \
   test2014_17.C \
   test2014_18.C \
   test2014_19.C \
   test2014_20.C \
   test2014_21.C \
   test2014_22.C \
   test2014_23.C \
   test2014_24.C \
   test2014_25.C \
   test2014_26.C \
   test2014_27.C \
   test2014_28.C \
   test2014_29.C \
   test2014_30.C \
   test2014_31.C \
   test2014_32.C \
   test2014_33.C \
   test2014_34.C \
   test2014_35.C \
   test2014_36.C \
   test2014_37.C \
   test2014_38.C \
   test2014_39.C \
   test2014_40.C \
   test2014_41.C \
   test2014_42.C \
   test2014_43.C \
   test2014_44.C \
   test2014_45.C \
   test2014_47.C \
   test2014_48.C \
   test2014_49.C \
   test2014_50.C \
   test2014_51.C \
   test2014_52.C \
   test2014_53.C \
   test2014_54.C \
   test2014_55.C \
   test2014_56.C \
   test2014_57.C \
   test2014_58.C \
   test2014_70.C \
   test2014_71.C \
   test2014_72.C \
   test2014_73.C \
   test2014_74.C \
   test2014_75.C \
   test2014_76.C \
   test2014_77.C \
   test2014_78.C \
   test2014_79.C \
   test2014_80.C \
   test2014_81.C \
   test2014_82.C \
   test2014_83.C \
   test2014_84.C \
   test2014_85.C \
   test2014_86.C \
   test2014_87.C \
   test2014_88.C \
   test2014_89.C \
   test2014_90.C \
   test2015_01.C \
   test2015_02.C \
   test2015_03.C \
   test2015_04.C \
   test2015_05.C \
   test2015_06.C \
   test2015_07.C \
   test2015_08.C \
   test2015_09.C \
   test2015_10.C \
   test2015_12.C \
   test2015_13.C \
   test2015_14.C \
   test2015_15.C \
   test2015_16.C \
   test2016_01.C \
   test2016_03.C \
   test2016_04.C \
   test2016_06.C \
   test2016_07.C \
   test2016_10.C \
   test2016_11.C \
   test2016_13.C \
   test2016_14.C \
   test2016_15.C \
   test2016_16.C \
   test2016_17.C \
   test2016_18.C \
   test2016_19.C \
   test2016_21.C \
   test2016_22.C \
   test2016_25.C \
   test2016_28.C \
   test2016_29.C \
   test2016_30.C \
   test2016_37.C \
   test2016_39.C \
   test2016_42.C \
   test2016_91.C \
   test2016_92.C \
   test2016_93.C \
   test2017_03.C \
   test2017_04.C \
   test2017_07.C \
   test2017_08.C \
   test2017_09.C \
   test2017_11.C \
   test2017_12.C \
   test2017_13.C \
   test2017_14.C \
   test2017_15.C \
   test2017_16.C \
   test2017_18.C \
   test2017_19.C \
   test2017_20.C \
   test2017_21.C \
   test2017_22.C \
   test2017_23.C \
   test2018_04.C \
   test2018_05.C \
   test2018_06.C \
   test2018_07.C \
   test2018_08.C \
   test2018_09.C \
   test2018_10.C \
   test2018_11.C \
   test2018_12.C \
   test2018_13.C \
   test2018_14.C \
   test2018_15.C \
   test2018_16.C \
   test2018_17.C \
   test2018_18.C \
   test2018_19.C \
   test2018_20.C \
   test2018_21.C \
   test2018_23.C \
   test2018_24.C \
   test2018_26.C \
   test2018_27.C \
   test2018_28.C \
   test2018_29.C \
   test2018_30.C \
   test2018_31.C \
   test2018_34.C \
   test2018_35.C \
   test2018_36.C \
   test2018_37.C \
   test2018_38.C \
   test2018_39.C \
   test2018_40.C \
   test2018_41.C \
   test2018_42.C \
   test2018_43.C \
   test2018_44.C \
   test2018_45.C \
   test2018_46.C \
   test2018_47.C \
   test2018_48.C \
   test2018_51.C \
   test2018_52.C \
   test2018_53.C \
   test2018_54.C \
   test2018_55.C \
   test2018_56.C \
   test2018_57.C \
   test2018_58.C \
   test2018_59.C \
   test2018_61.C \
   test2018_62.C \
   test2018_66.C \
   test2018_67.C \
   test2018_68.C \
   test2018_69.C \
   test2018_70.C \
   test2018_72.C \
   test2018_73.C \
   test2018_74.C \
   test2018_75.C \
   test2018_76.C \
   test2018_77.C \
   test2018_78.C \
   test2018_79.C \
   test2018_80.C \
   test2018_81.C \
   test2018_82.C \
   test2018_83.C \
   test2018_84.C \
   test2018_85.C \
   test2018_86.C \
   test2018_88.C \
   test2018_89.C \
   test2018_90.C \
   test2018_91.C \
   test2018_92.C \
   test2018_94.C \
   test2018_95.C \
   test2018_97.C \
   test2018_98.C \
   test2018_99.C \
   test2018_107.C \
   test2018_108.C \
   test2018_109.C \
   test2018_110.C \
   test2018_111.C \
   test2018_112.C \
   test2018_113.C \
   test2018_114.C \
   test2018_115.C \
   test2018_116.C \
   test2018_119.C \
   test2018_120.C \
   test2018_121.C \
   test2018_124.C \
   test2018_130.C \
   test2018_131.C \
   test2018_132.C \
   test2018_133.C \
   test2018_134.C \
   test2018_135.C \
   test2018_137.C \
   ctor-list-init.C \
   rose-1379-a.C \
   rose-1379-b.C \
   rose-1437-0.C \
   test2017_10.C \
   rose-1522-0.C \
   rose-1763.C \
   rose-1863.C \
   rose-1973.C \
   test2019_01.C \
   test2019_02.C \
   test2019_03.C \
   test2019_05.C \
   test2019_06.C \
   test2019_07.C \
   test2019_08.C \
   test2019_10.C \
   test2019_11.C \
   test2019_12.C \
   test2019_13.C \
   test2019_14.C \
   test2019_17.C \
   test2019_18.C \
   test2019_19.C \
   test2019_20.C \
   test2019_21.C \
   test2019_22.C \
   test2019_23.C \
   test2019_24.C \
   test2019_25.C \
   test2019_26.C \
   test2019_27.C \
   test2019_28.C \
   test2019_29.C \
   test2019_30.C \
   test2019_31.C \
   test2019_32.C \
   test2019_33.C \
   test2019_35.C \
   test2019_36.C \
   test2019_39.C \
   test2019_40.C \
   test2019_41.C \
   test2019_42.C \
   test2019_45.C \
   test2019_46.C \
   test2019_47.C \
   test2019_48.C \
   test2019_49.C \
   test2019_50.C \
   test2019_51.C \
   test2019_52.C \
   test2019_53.C \
   test2019_54.C \
   test2019_55.C \
   test2019_56.C \
   test2019_59.C \
   test2019_60.C \
   test2019_61.C \
   test2019_62.C \
   test2019_63.C \
   test2019_64.C \
   test2019_65.C \
   test2019_66.C \
   test2019_67.C \
   test2019_68.C \
   test2019_69.C \
   test2019_70.C \
   test2019_71.C \
   test2019_72.C \
   test2019_73.C \
   test2019_74.C \
   test2019_75.C \
   test2019_76.C \
   test2019_77.C \
   test2019_78.C \
   test2019_79.C \
   test2019_80.C \
   test2019_81.C \
   test2019_82.C \
   test2019_83.C \
   test2019_86.C \
   test2019_87.C \
   test2019_88.C \
   test2019_89.C \
   test2019_90.C \
   test2019_91.C \
   test2019_92.C \
   test2019_93.C \
   test2019_96.C \
   test2019_97.C \
   test2019_98.C \
   test2019_99.C \
   test2019_100.C \
   test2019_101.C \
   test2019_102.C \
   test2019_105.C \
   test2019_106.C \
   test2019_107.C \
   test2019_108.C \
   test2019_113.C \
   test2019_114.C \
   test2019_115.C \
   test2019_116.C \
   test2019_117.C \
   test2019_118.C \
   test2019_119.C \
   test2019_120.C \
   test2019_121.C \
   test2019_123.C \
   test2019_124.C \
   test2019_125.C \
   test2019_129.C \
   test2019_130.C \
   test2019_131.C \
   test2019_133.C \
   test2019_134.C \
   test2019_135.C \
   test2019_136.C \
   test2019_137.C \
   test2019_138.C \
   test2019_139.C \
   test2019_140.C \
   test2019_141.C \
   test2019_142.C \
   test2019_143.C \
   test2019_144.C \
   test2019_145.C \
   test2019_146.C \
   test2019_147.C \
   test2019_150.C \
   test2019_151.C \
   test2019_152.C \
   test2019_153.C \
   test2019_154.C \
   test2019_155.C \
   test2019_156.C \
   test2019_157.C \
   test2019_160.C \
   test2019_163.C \
   test2019_164.C \
   test2019_165.C \
   test2019_166.C \
   test2019_167.C \
   test2019_168.C \
   test2019_169.C \
   test2019_170.C \
   test2019_171.C \
   test2019_172.C \
   test2019_173.C \
   test2019_174.C \
   test2019_175.C \
   test2019_176.C \
   test2019_177.C \
   test2019_178.C \
   test2019_179.C \
   test2019_180.C \
   test2019_181.C \
   test2019_184.C \
   test2019_185.C \
   test2019_186.C \
   test2019_187.C \
   test2019_188.C \
   test2019_189.C \
   test2019_190.C \
   test2019_191.C \
   test2019_192.C \
   test2019_193.C \
   test2019_194.C \
   test2019_195.C \
   test2019_196_a.C \
   test2019_196_b.C \
   test2019_197.C \
   test2019_198_a.C \
   test2019_198_b.C \
   test2019_200_a.C \
   test2019_200_b.C \
   test2019_202.C \
   test2019_205.C \
   test2019_206.C \
   test2019_207.C \
   test2019_208.C \
   test2019_209.C \
   test2019_210.C \
   test2019_211.C \
   test2019_212.C \
   test2019_213.C \
   test2019_214.C \
   test2019_215.C \
   test2019_216.C \
   test2019_217.C \
   test2019_220.C \
   test2019_221.C \
   test2019_222.C \
   test2019_223.C \
   test2019_224.C \
   test2019_225.C \
   test2019_226.C \
   test2019_227.C \
   test2019_228.C \
   test2019_229.C \
   test2019_232.C \
   test2019_233.C \
   test2012_23.C \
   test2014_46.C \
   test2015_11.C \
   test2016_40.C \
   test2019_15.C \
   test2019_43.C \
   test2019_44.C \
   test2019_46.C \
   test2019_109.C \
   test2019_126.C \
   test2019_127.C \
   test2019_128.C \
   test2019_182.C \
   test2019_183.C \
   test2019_234.C \
   test2019_235.C \
   test2019_314.C \
   test2019_315.C \
   test2019_316.C \
   test2019_317.C \
   test2019_318.C \
   test2019_319.C \
   test2019_320.C \
   test2019_321.C \
   test2019_322.C \
   test2019_323.C \
   test2019_324.C \
   test2019_325.C \
   test2019_326.C \
   test2019_327.C \
   test2019_328.C \
   test2019_329.C \
   test2019_330.C \
   test2019_331.C \
   test2019_332.C \
   test2019_333.C \
   test2019_334.C \
   test2019_335.C \
   test2019_336.C \
   test2019_337.C \
   test2019_338.C \
   test2019_339.C \
   test2019_340.C \
   test2019_341.C \
   test2019_342.C \
   test2019_343.C \
   test2019_347.C \
   test2019_349.C \
   test2019_350.C \
   test2019_351.C \
   test2019_352.C \
   test2019_353.C \
   test2019_354.C \
   test2019_356.C \
   test2019_357.C \
   test2019_358.C \
   test2019_359.C \
   test2019_360.C \
   test2019_360.C \
   test2019_361.C \
   test2019_362.C \
   test2019_363.C \
   test2019_364.C \
   test2019_365.C \
   test2019_368.C \
   test2019_369.C \
   test2019_370.C \
   test2019_371.C \
   test2019_372.C \
   test2019_373.C \
   test2019_374.C \
   test2019_375.C \
   test2019_376.C \
   test2019_377.C \
   test2019_378.C \
   test2019_379.C \
   test2019_380.C \
   test2019_381.C \
   test2019_383.C \
   test2019_384.C \
   test2019_385.C \
   test2019_386.C \
   test2019_387.C \
   test2019_389.C \
   test2019_390.C \
   test2019_391.C \
   test2019_392.C \
   test2019_393.C \
   test2019_394.C \
   test2019_395.C \
   test2019_396.C \
   test2019_397.C \
   test2019_398.C \
   test2019_399.C \
   test2019_400.C \
   test2019_401.C \
   test2019_402.C \
   test2019_403.C \
   test2019_404.C \
   test2019_405.C \
   test2019_406.C \
   test2019_407.C \
   test2019_408.C \
   test2019_409.C \
   test2019_410.C \
   test2019_412.C \
   test2019_413.C \
   test2019_414.C \
   test2019_415.C \
   test2019_416.C \
   test2019_417.C \
   test2019_418.C \
   test2019_419.C \
   test2019_420.C \
   test2019_421.C \
   test2019_422.C \
   test2019_423.C \
   test2019_424.C \
   test2019_425.C \
   test2019_426.C \
   test2019_427.C \
   test2019_428.C \
   test2019_429.C \
   test2019_430.C \
   test2019_431.C \
   test2019_432.C \
   test2019_433.C \
   test2019_434.C \
   test2019_435.C \
   test2019_436.C \
   test2019_437.C \
   test2019_439.C \
   test2019_440.C \
   test2019_441.C \
   test2019_442.C \
   test2019_443.C \
   test2019_444.C \
   test2019_445.C \
   test2019_446.C \
   test2019_447.C \
   test2019_448.C \
   test2019_449.C \
   test2019_450.C \
   test2019_451.C \
   test2019_452.C \
   test2019_454.C \
   test2019_455.C \
   test2019_456.C \
   test2019_457.C \
   test2019_458.C \
   test2019_459.C \
   test2019_460.C \
   test2019_461.C \
   test2019_462.C \
   test2019_463.C \
   test2019_464.C \
   test2019_465.C \
   test2019_466.C \
   test2019_467.C \
   test2019_468.C \
   test2019_469.C \
   test2019_470.C \
   test2019_471.C \
   test2019_472.C \
   test2019_473.C \
   test2019_474.C \
   test2019_475.C \
   test2019_476.C \
   test2019_477.C \
   test2019_478.C \
   test2019_479.C \
   test2019_480.C \
   test2019_481.C \
   test2019_482.C \
   test2019_483.C \
   test2019_484.C \
   test2019_485.C \
   test2019_486.C \
   test2019_487.C \
   test2019_493.C \
   test2019_494.C \
   test2019_495.C \
   test2019_496.C \
   test2019_497.C \
   test2019_498.C \
   test2019_499.C \
   test2019_500.C \
   test2019_501.C \
   test2019_502.C \
   test2019_503.C 

TESTCODE_CURRENTLY_FAILING = \
   test2012_10.C \
   test2012_24.C \
   test2016_41.C \
   test2017_17.C \
   test2019_16.C \
   test2019_34.C \
   test2019_37.C \
   test2019_38.C \
   test2019_103.C \
   test2019_104.C \
   test2019_122.C \
   test2019_132.C \
   test2019_148.C \
   test2019_149.C \
   test2019_199.C \
   test2019_201.C \
   test2019_203.C \
   test2019_204.C \
   test2019_236.C \
   test2019_237.C \
   test2019_238.C \
   test2019_239.C \
   test2019_240.C \
   test2019_241.C \
   test2019_242.C \
   test2019_243.C \
   test2019_244.C \
   test2019_245.C \
   test2019_246.C \
   test2019_247.C \
   test2019_248.C \
   test2019_249.C \
   test2019_250.C \
   test2019_251.C \
   test2019_252.C \
   test2019_253.C \
   test2019_254.C \
   test2019_255.C \
   test2019_256.C \
   test2019_257.C \
   test2019_258.C \
   test2019_259.C \
   test2019_260.C \
   test2019_261.C \
   test2019_262.C \
   test2019_263.C \
   test2019_264.C \
   test2019_265.C \
   test2019_266.C \
   test2019_267.C \
   test2019_268.C \
   test2019_269.C \
   test2019_270.C \
   test2019_271.C \
   test2019_272.C \
   test2019_273.C \
   test2019_274.C \
   test2019_275.C \
   test2019_276.C \
   test2019_277.C \
   test2019_278.C \
   test2019_279.C \
   test2019_280.C \
   test2019_281.C \
   test2019_282.C \
   test2019_283.C \
   test2019_284.C \
   test2019_285.C \
   test2019_286.C \
   test2019_287.C \
   test2019_288.C \
   test2019_289.C \
   test2019_290.C \
   test2019_291.C \
   test2019_292.C \
   test2019_293.C \
   test2019_294.C \
   test2019_295.C \
   test2019_296.C \
   test2019_297.C \
   test2019_298.C \
   test2019_299.C \
   test2019_300.C \
   test2019_301.C \
   test2019_302.C \
   test2019_303.C \
   test2019_304.C \
   test2019_305.C \
   test2019_306.C \
   test2019_307.C \
   test2019_308.C \
   test2019_309.C \
   test2019_310.C \
   test2019_311.C \
   test2019_312.C \
   test2019_313.C \
   test2019_345.C \
   test2019_346.C \
   test2019_348.C \
   test2019_366.C \
   test2019_382.C \
   test2019_388.C \
   test2019_411.C \
   test2019_438.C \
   test2019_453.C \
   test2019_488.C \
   test2019_489.C \
   test2019_490.C \
   test2019_491.C \
   test2019_492.C 

# NOTE: test2016_40.C fails due to a problem isolated into test2019_167.C (which required a more general form of name qualification support).

# NOTE: Best examples of current issue are: test2019_50.C and test2019_52.C

# NOTE: test2019_34.C, test2019_37.C, and test2019_38.C don't compile with at least some versions of GNU g++ (e.g. version 5.1) but will 
# compile with EDG and ROSE now.  And the generated code is correct,
# NOTE: test2019_15.C fails for the GNU 4.8.5, but passes for everything else (or at least later versions of gnu, versions 5.1 and later).

# NOTE: test2012_10.C works on with GNU 5.1, but not GNU 6.1 (something different in the header files, not handled by EDG 4.12).
# Priority to fix: test2014_85.C, test2015_11.C, test2016_41.C, test2017_17.C

if USING_INTEL_COMPILER
  TESTCODE_CURRENTLY_FAILING += \
    rose-2037.C
else
if ROSE_USING_GCC_VERSION_LATER_6_1
  TESTCODES_REQUIRED_TO_PASS += \
    rose-2037.C
else
  TESTCODE_CURRENTLY_FAILING += \
    rose-2037.C
endif
endif

if ROSE_USE_EDG_VERSION_4_9
if ROSE_USING_GCC_VERSION_LATER_4_9
  TESTCODES_REQUIRED_TO_PASS += \
   test2012_08.C \
   test2016_26.C \
   test2016_27.C \
   test2016_31.C \
   test2018_60.C \
   test2018_63.C \
   test2018_64.C \
   test2018_65.C \
   test2018_71.C 
else
# DQ (1/4/2019): These tests fail with the EDG 4.9 and GNU 4.8 compiler (Note: EDG 4.9 is only tested with the GNU 4.8 compiler).
  TESTCODE_CURRENTLY_FAILING += \
   test2012_08.C \
   test2016_26.C \
   test2016_27.C \
   test2016_31.C \
   test2018_60.C \
   test2018_63.C \
   test2018_64.C \
   test2018_65.C \
   test2018_71.C 
endif
else
  TESTCODES_REQUIRED_TO_PASS += \
   test2012_08.C \
   test2018_60.C \
   test2018_63.C \
   test2018_64.C \
   test2018_65.C \
   test2018_71.C \
   test2019_57.C \
   test2019_58.C \
   test2019_158.C \
   test2019_159.C \
   test2019_161.C 
if USING_INTEL_COMPILER
   TESTCODE_CURRENTLY_FAILING += \
     test2016_26.C \
     test2016_27.C \
     test2016_31.C \
     test2019_162.C
else
   TESTCODES_REQUIRED_TO_PASS += \
     test2016_26.C \
     test2016_27.C \
     test2016_31.C \
     test2019_162.C
endif
endif

if USING_INTEL_COMPILER
   TESTCODE_CURRENTLY_FAILING += \
     rose-1380.C \
     rose-1774.C \
     test2012_14.C \
     test2012_26.C \
     test2018_105.C \
     test2018_117.C \
     test2018_118.C \
     test2018_127.C \
     test2018_136.C \
     test2018_93.C \
     test2018_96.C \
     test2019_04.C \
     test2019_110.C \
     test2019_111.C \
     test2019_112.C \
     test2019_218.C \
     test2019_219.C \
     test2019_230.C \
     test2019_231.C \
     test2019_344.C \
     test2019_355.C \
     test2019_367.C \
     test2019_94.C \
     test2019_95.C
else
   TESTCODES_REQUIRED_TO_PASS += \
     rose-1380.C \
     rose-1774.C \
     test2012_14.C \
     test2012_26.C \
     test2018_105.C \
     test2018_117.C \
     test2018_118.C \
     test2018_127.C \
     test2018_136.C \
     test2018_93.C \
     test2018_96.C \
     test2019_04.C \
     test2019_110.C \
     test2019_111.C \
     test2019_112.C \
     test2019_218.C \
     test2019_219.C \
     test2019_230.C \
     test2019_231.C \
     test2019_344.C \
     test2019_355.C \
     test2019_367.C \
     test2019_94.C \
     test2019_95.C
endif

if USING_INTEL_COMPILER
  TESTCODE_CURRENTLY_FAILING += \
   test2018_100.C 
else
if ROSE_USING_GCC_VERSION_LATER_4_9
  TESTCODES_REQUIRED_TO_PASS += \
   test2018_100.C 
else
  TESTCODE_CURRENTLY_FAILING += \
   test2018_100.C 
endif
endif

if OS_MACOSX
  TESTCODE_CURRENTLY_FAILING += \
     test2016_12.C \
     test2016_20.C \
     test2016_23.C \
     test2016_24.C \
     test2016_33.C \
     test2016_34.C \
     test2016_35.C \
     test2016_36.C \
     test2016_90.C 
else
  TESTCODES_REQUIRED_TO_PASS += \
     test2016_12.C \
     test2016_20.C \
     test2016_23.C \
     test2016_24.C \
     test2016_33.C \
     test2016_34.C \
     test2016_35.C \
     test2016_36.C \
     test2016_90.C 
endif

# Automake's testing mechanism (which defines the "make check" rule) requires passing tests.
TESTCODES = \
   $(TESTCODES_REQUIRED_TO_PASS) 

# QMTest allows both passing and failing tests.
ALL_TESTCODES = \
   $(TESTCODES_REQUIRED_TO_PASS) \
   $(TESTCODE_CURRENTLY_FAILING)


TESTCODE_INCLUDES =

# VALGRIND_OPTIONS = -v --num-callers=12 --leak-check=yes --error-limit=no --show-reachable=yes
VALGRIND_OPTIONS = --tool=memcheck -v --num-callers=30 --leak-check=no --error-limit=no --show-reachable=yes --trace-children=yes --suppressions=$(top_srcdir)/scripts/rose-suppressions-for-valgrind
# VALGRIND = valgrind $(VALGRIND_OPTIONS)
# VALGRIND =

# DQ (11/5/2016): Adding support for address sanitizer (borrowing the VALGRIND variable to support 
# this, this implementation needs review).  It might be better to prepend the information to the 
# CC and CXX variables. I think that the purify support uses this approach.
if ROSE_USE_SANITIZER
VALGRIND = $(NON_RTH_ADDRESS_SANITIZER_OPTIONS)
else
VALGRIND =
endif

globalVariablesInLambdas_test: globalVariablesInLambdas
	./globalVariablesInLambdas -std=c++11 --edg:no_warnings -c $(srcdir)/globalVariablesInLambdas_test_01.C

# DQ (12/13/2017): Need to add support for multiple versions of Raja.
# Use --with-research-raja=... and --with-ares-raja=... , and for other specific applications dependent on Raja.
RajaInclude = /home/quinlan1/ROSE/RAJA/install/include

rajaTest:../../testTranslator
	$(VALGRIND) ../../testTranslator $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(RajaInclude) -I$(srcdir) -c $(srcdir)/test2017_33.C

# DQ (2/25/2019): Combined compilation of two files has particular errors.
test2019_196_ab: ../../testTranslator
	$(VALGRIND) $(TEST_TRANSLATOR) $(ROSE_FLAGS)  $(TESTCODE_INCLUDES) -c $(srcdir)/test2019_196_a.C $(srcdir)/test2019_196_b.C

# DQ (2/26/2019): Combined compilation of two files has particular errors.
test2019_198_ab: ../../testTranslator
	$(VALGRIND) $(TEST_TRANSLATOR) $(ROSE_FLAGS)  $(TESTCODE_INCLUDES) -c $(srcdir)/test2019_198_a.C $(srcdir)/test2019_198_b.C

# DQ (2/27/2019): Combined compilation of two files has particular errors.
test2019_200_ab: ../../testTranslator
	$(VALGRIND) $(TEST_TRANSLATOR) $(ROSE_FLAGS)  $(TESTCODE_INCLUDES) -c $(srcdir)/test2019_200_a.C $(srcdir)/test2019_200_b.C



#########
# Targets lists

PASSING_TEST_Source_passed = ${TESTCODES:.C=.C.passed}
TEST_Source_passed = ${ALL_TESTCODES:.C=.C.passed}

#########
# Translator to be used: calling "make TEST_TRANSLATOR=../../testBackend" uses the backend compiler only

../../testTranslator:
	cd ../..; $(MAKE) testTranslator

../../testBackend:
	cd ../..; $(MAKE) testBackend

testCompiler:
	ln -s `which @BACKEND_CXX_COMPILER@` testCompiler

TEST_TRANSLATOR=../../testTranslator

#########
# ROSE_FLAGS

LANG_FLAGS = -std=c++11

ROSE_FLAGS =
if !ROSE_USE_CLANG_FRONTEND
   ROSE_FLAGS += --edg:no_warnings --edg:restrict
endif
ROSE_FLAGS += -w -rose:verbose 0 -rose:skip_unparse_asm_commands

#########
# RTH test targets

$(TEST_Source_passed): %.passed: $(srcdir)/% $(TEST_TRANSLATOR) $(top_srcdir)/scripts/test_exit_status
if !ROSE_USE_INSURE
	@$(RTH_RUN) \
	   CMD="$(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -c $(srcdir)/$(@:.C.passed=.C)" \
	   TITLE="TEST: $(TEST_TRANSLATOR) $(@:.C.passed=.C)" \
	   $(top_srcdir)/scripts/test_exit_status $@
else
	$(VALGRIND) $(TEST_TRANSLATOR) $(LANG_FLAGS) $(ROSE_FLAGS)  $(TESTCODE_INCLUDES) -c $(srcdir)/$(@:.C.passed=.C)
endif

#
############

# Make sure that all the test codes end up in the distribution
EXTRA_DIST = $(TESTCODES_REQUIRED_TO_PASS) $(TESTCODE_CURRENTLY_FAILING)

check-local:
# DQ (2/19/2017): NEW VERSION OF LOGIC
# DQ (2/18/2017): More specific logic required for portability.
# When using EDG 4.9 these files don't compile on later versions of GNU, CLANG, and Intel compilers 
# but we still want them tests as we transition to EDG 4.12 (where they all work fine independent of 
# the compiler vendor and GNU compiler version).
if ROSE_USE_EDG_VERSION_4_9
	@echo "ROSE_USE_EDG_VERSION_4_9 == true"
if USING_GNU_COMPILER
	@echo "USING_GCC_COMPILER == true"
if ROSE_USING_GCC_VERSION_LATER_4_8
	@echo "ROSE_USING_GCC_VERSION_LATER_4_8 == true"
#	@echo "C++11 tests using EDG 4.9 and GNU version 4.9 backend compiler are disabled."
if ROSE_USING_GCC_VERSION_LATER_4_9
	@echo "C++11 tests using EDG 4.9: GNU 4.9 backend compiler NOT allowed with the EDG 4.9 frontend (reconfigure with EDG 4.12)."
else  # NOT ROSE_USING_GCC_VERSION_LATER_4_9
	@echo "C++11 tests using EDG 4.9 and GNU version 4.8 backend compiler are allowed."
	@$(MAKE) $(PASSING_TEST_Source_passed)
endif # ROSE_USING_GCC_VERSION_LATER_4_9
# Exclude these tests on GNU 4.9 and later compilers).
else  # NOT ROSE_USING_GCC_VERSION_LATER_4_8
# If this is not the CLANG or Intel compilers and an earlier version of GNU than GNU 4.9 compiler, so include these files.
	@echo "ROSE_USING_GCC_VERSION_LATER_4_8 == false"
endif # ROSE_USING_GCC_VERSION_LATER_4_8
else  # NOT USING_GNU_COMPILER
	@echo "USING_GCC_COMPILER == false"
if USING_CLANG_COMPILER
# Exclude this list of files in the case of CLANG compiler.
#	@echo "USING_CLANG_COMPILER == true"
	@echo "C++11 tests using EDG 4.9: Clang backend compiler are NOT allowed with the EDG 4.9 frontend."
else # NOT USING_CLANG_COMPILER
#	@echo "USING_CLANG_COMPILER == false"
if USING_INTEL_COMPILER
# Exclude this list of files in the case of Intel compiler.
#	@echo "USING_INTEL_COMPILER == true"
	@echo "C++11 tests using EDG 4.9 Intel backend compiler are NOT allowed."
#	@$(MAKE) $(PASSING_TEST_Objects)
else # NOT USING_INTEL_COMPILER
# This is an unknown compiler.
#	@echo "USING_INTEL_COMPILER == false"
endif # USING_INTEL_COMPILER
endif # USING_CLANG_COMPILER
endif # USING_GNU_COMPILER
else  # NOT ROSE_USE_EDG_VERSION_4_9
# Using EDG 4.12 or later (run all tests independent of the compiler).
#	@echo "ROSE_USE_EDG_VERSION_4_9 == false"
if USING_GNU_COMPILER
if ROSE_USING_GCC_VERSION_LATER_4_8
	@echo "C++11 tests require configuration with either EDG version 4.9 and GNU version 4.8 or backend compiler or EDG 4.12 and 4.8 or any later GNU compiler."
	@echo "C++11 tests using EDG 4.12 and any supported backend compiler are allowed."
	@$(MAKE) $(PASSING_TEST_Source_passed)
endif # ROSE_USING_GCC_VERSION_LATER_4_8
else
	@echo "ROSE_USE_EDG_VERSION_4_9 == false"
if USING_CLANG_COMPILER
# Exclude this list of files in the case of CLANG compiler.
	@echo "USING_CLANG_COMPILER == true"
	@echo "C++11 tests using EDG 4.9: Clang backend compiler using EDG 4.12 frontend."
# DQ (2/21/2017): Too many failing files due to builtin functions that are missing.
#	@$(MAKE) $(PASSING_TEST_Objects)
else # NOT USING_CLANG_COMPILER
	@echo "USING_CLANG_COMPILER == false"
if USING_INTEL_COMPILER
# Exclude this list of files in the case of Intel compiler.
	@echo "USING_INTEL_COMPILER == true"
	@echo "C++11 tests using EDG 4.12 Intel backend compiler are allowed."
	@$(MAKE) $(PASSING_TEST_Source_passed)
else # NOT USING_INTEL_COMPILER
# This is an unknown compiler.
	@echo "USING_INTEL_COMPILER == false"
endif # USING_INTEL_COMPILER
endif # USING_CLANG_COMPILER
endif # USING_GNU_COMPILER
endif # ROSE_USE_EDG_VERSION_4_9
	@echo "*********************************************************************************************************************"
	@echo "****** ROSE/tests/nonsmoke/functional/CompileTests/Cxx11_tests: make check rule complete (terminated normally) ******"
	@echo "*********************************************************************************************************************"


clean-local:
	rm -f a.out *.o rose_*.[cC] roseTestProgram.C *.dot
	rm -rf QMTest
	rm -f *.int.c
	rm -f *.failed *.passed

status:
	@$(MAKE) $(TEST_Source_passed)

